One of the easiest ways to create a web interface for a Python code that communicates with ChatGPT is by using a web framework like Flask or Django. Here's a simplified approach using Flask:

1. **Install Flask**: If you haven't already, install Flask using pip:

    ```
    pip install Flask
    ```

2. **Create your Flask App**: Create a Python file, let's call it `app.py`, and write your Flask application code. This code will define the routes for your web application and handle the communication with ChatGPT.

    ```python
    from flask import Flask, render_template, request
    import openai

    app = Flask(__name__)

    # Set your OpenAI API key
    openai.api_key = 'YOUR_OPENAI_API_KEY'

    @app.route('/')
    def home():
        return render_template('index.html')

    @app.route('/ask', methods=['POST'])
    def ask():
        user_input = request.form['user_input']
        response = openai.Completion.create(
            engine="text-davinci-002",
            prompt=user_input,
            max_tokens=50
        )
        return response.choices[0].text.strip()

    if __name__ == '__main__':
        app.run(debug=True)
    ```

3. **Create HTML Template**: Create an HTML template file in a directory named `templates` within the same directory as your `app.py` file. Let's call this file `index.html`.

    ```html
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Chat with GPT</title>
    </head>
    <body>
        <h1>Chat with GPT</h1>
        <form action="/ask" method="post">
            <input type="text" name="user_input" placeholder="Ask a question...">
            <input type="submit" value="Submit">
        </form>
        <div id="response"></div>
        <script>
            document.querySelector('form').onsubmit = async function(event) {
                event.preventDefault();
                const formData = new FormData(this);
                const response = await fetch('/ask', {
                    method: 'POST',
                    body: formData
                });
                const text = await response.text();
                document.getElementById('response').innerHTML = text;
                this.reset();
            };
        </script>
    </body>
    </html>
    ```

4. **Run Your Flask App**: Run your Flask application by executing `python app.py` in your terminal. This will start a development server.

5. **Access Your Web Interface**: Open a web browser and navigate to `http://localhost:5000` to access your web interface. You should be able to ask questions and receive responses from ChatGPT.

Remember to replace `'YOUR_OPENAI_API_KEY'` with your actual OpenAI API key. Additionally, this is a very basic example and may need further refinement depending on your specific requirements and use case.